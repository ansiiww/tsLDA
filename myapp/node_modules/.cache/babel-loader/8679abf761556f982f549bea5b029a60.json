{"ast":null,"code":"var _jsxFileName = \"/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/docpage.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass TopicDoc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // used by reorderDocuments\n      docSortSmoothing: 10.0,\n      sumDocSortSmoothing: 0\n    };\n  }\n\n  reorderDocuments() {\n    var format = d3.format(\".2g\");\n\n    if (this.props.selectedTopic === -1) {\n      this.props.documents.sort(function (a, b) {\n        return d3.ascending(a.originalOrder, b.originalOrder);\n      });\n      d3.selectAll(\"div.document\").data(this.props.documents).style(\"display\", \"block\").text(function (d) {\n        return \"[\" + d.id + \"] \" + this.props.truncate(d.originalText);\n      });\n    } else {\n      var scores = this.props.documents.map(function (doc, i) {\n        return {\n          docID: i,\n          score: (doc.topicCounts[this.props.selectedTopic] + this.state.docSortSmoothing) / (doc.tokens.length + this.state.sumDocSortSmoothing)\n        };\n      });\n      scores.sort(function (a, b) {\n        return b.score - a.score;\n      });\n      /*documents.sort(function(a, b) {\n          var score1 = (a.topicCounts[selectedTopic] + docSortSmoothing) / (a.tokens.length + sumDocSortSmoothing);\n          var score2 = (b.topicCounts[selectedTopic] + docSortSmoothing) / (b.tokens.length + sumDocSortSmoothing);\n          return d3.descending(score1, score2);\n      }); */\n      // Put in render?\n\n      d3.selectAll(\"div.document\").data(scores).style(\"display\", function (d) {\n        return this.props.documents[d.docID].topicCounts[this.props.selectedTopic] > 0 ? \"block\" : \"none\";\n      }).text(function (d) {\n        return \"[\" + this.props.documents[d.docID].id + \"/\" + format(d.score * 100) + \"%] \" + this.props.truncate(this.props.documents[d.docID].originalText);\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      sumDocSortSmoothing: this.state.docSortSmoothing * this.props.numTopics\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    this.reorderDocuments();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"docs-page\",\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: \"event.preventDefault(); queueLoad();\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Use a different collection:\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Documents \", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"docs-file-input\",\n      type: \"file\",\n      onChange: \"onDocumentFileChange(this)\",\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Stoplist  \", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"stops-file-input\",\n      type: \"file\",\n      onChange: \"onStopwordFileChange(this)\",\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"load-inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Documents are sorted by their proportion of the currently selected topic, biased to prefer longer documents.\"));\n  }\n\n}\n\nexport default TopicDoc;","map":{"version":3,"sources":["/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/docpage.js"],"names":["React","Component","d3","TopicDoc","constructor","props","state","docSortSmoothing","sumDocSortSmoothing","reorderDocuments","format","selectedTopic","documents","sort","a","b","ascending","originalOrder","selectAll","data","style","text","d","id","truncate","originalText","scores","map","doc","i","docID","score","topicCounts","tokens","length","componentDidMount","setState","numTopics","componentDidUpdate","prevProps","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport * as d3 from 'd3';\n\nclass TopicDoc extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // used by reorderDocuments\n            docSortSmoothing: 10.0,\n            sumDocSortSmoothing: 0\n        };\n      }\n\n    reorderDocuments() {\n        var format = d3.format(\".2g\");\n      \n        if (this.props.selectedTopic === -1) {\n          this.props.documents.sort(function(a, b) { return d3.ascending(a.originalOrder, b.originalOrder); });\n          d3.selectAll(\"div.document\").data(this.props.documents)\n          .style(\"display\", \"block\")\n          .text(function(d) { return \"[\" + d.id + \"] \" + this.props.truncate(d.originalText); });\n        }\n        else {\n          var scores = this.props.documents.map(function (doc, i) {\n            return {docID: i, score: (doc.topicCounts[this.props.selectedTopic] + this.state.docSortSmoothing) / (doc.tokens.length + this.state.sumDocSortSmoothing)};\n          });\n          scores.sort(function(a, b) {\n            return b.score - a.score;\n          });\n          /*documents.sort(function(a, b) {\n              var score1 = (a.topicCounts[selectedTopic] + docSortSmoothing) / (a.tokens.length + sumDocSortSmoothing);\n              var score2 = (b.topicCounts[selectedTopic] + docSortSmoothing) / (b.tokens.length + sumDocSortSmoothing);\n              return d3.descending(score1, score2);\n          }); */\n          // Put in render?\n          d3.selectAll(\"div.document\").data(scores)\n            .style(\"display\", function(d) { return this.props.documents[d.docID].topicCounts[this.props.selectedTopic] > 0 ? \"block\" : \"none\"; })\n            .text(function(d) { return \"[\" + this.props.documents[d.docID].id + \"/\" + format(d.score * 100) + \"%] \" + this.props.truncate(this.props.documents[d.docID].originalText); });\n         }\n      }\n    \n    \n    componentDidMount() {\n        this.setState({sumDocSortSmoothing:this.state.docSortSmoothing * this.props.numTopics});\n    }\n\n    componentDidUpdate(prevProps) {\n        this.reorderDocuments();\n    }\n\n    render() {\n        return (\n            <div id=\"docs-page\" className=\"page\">\n                <div className=\"upload\">\n                    <form onSubmit=\"event.preventDefault(); queueLoad();\">\n                    <div>Use a different collection:</div>\n                    <div>Documents <input id=\"docs-file-input\" type=\"file\" onChange=\"onDocumentFileChange(this)\" size=\"10\"/></div>\n                    <div>Stoplist  <input id=\"stops-file-input\" type=\"file\" onChange=\"onStopwordFileChange(this)\" size=\"10\"/></div>\n                    <div><button id=\"load-inputs\">Upload</button></div>\n                    </form>\n                </div>\n            <div className=\"help\">Documents are sorted by their proportion of the currently selected topic, biased to prefer longer documents.</div>\n            </div>\n        )\n    }\n}\n\nexport default TopicDoc"]},"metadata":{},"sourceType":"module"}