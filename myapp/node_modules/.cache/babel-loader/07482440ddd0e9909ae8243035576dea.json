{"ast":null,"code":"import './App.css';\nimport './funcs/processing.js';\nimport './funcs/processVars.js';\nimport './funcs/correlationVars.js';\nimport './funcs/correlation.js';\nimport './funcs/d3.min.js';\nimport './funcs/display';\nimport './funcs/displayVars';\nimport './funcs/docsUp';\nimport './funcs/docsUpVar';\nimport './funcs/downloads';\nimport './funcs/downloadsVars';\nimport './funcs/stoplist';\nimport './funcs/stoplistVars';\nimport './funcs/sweep';\nimport './funcs/sweepVars';\nimport './funcs/topicDocuments';\nimport './funcs/topictime';\nimport './funcs/topictimeVars';\nimport './funcs/topidDocVars';\nimport './funcs/vocab';\nimport './funcs/vocabVars';\nimport * as d3 from 'd3';\nd3.select(\"#showStops\").on(\"click\", function () {\n  if (displayingStopwords) {\n    displayingStopwords = false;\n    this.innerText = \"Show stopwords\";\n    vocabTable();\n  } else {\n    displayingStopwords = true;\n    this.innerText = \"Hide stopwords\";\n    vocabTable();\n  }\n});\nd3.select(\"#sortVocabByTopic\").on(\"click\", function () {\n  if (sortVocabByTopic) {\n    sortVocabByTopic = false;\n    this.innerText = \"Sort by topic\";\n    vocabTable();\n  } else {\n    sortVocabByTopic = true;\n    this.innerText = \"Sort by frequency\";\n    vocabTable();\n  }\n}); // used by toggleTopicDocuments in topicdocuments, ready, changeNumTopics in processing, sweep in sweep\n\nfunction vocabTable() {\n  var format = d3.format(\".2g\");\n  var wordFrequencies = mostFrequentWords(displayingStopwords, sortVocabByTopic).slice(0, 499);\n  var table = d3.select(\"#vocab-table tbody\");\n  table.selectAll(\"tr\").remove();\n  wordFrequencies.forEach(function (d) {\n    var isStopword = stopwords[d.word];\n    var score = specificity(d.word);\n    var row = table.append(\"tr\");\n    row.append(\"td\").text(d.word).style(\"color\", isStopword ? \"#444444\" : \"#000000\");\n    row.append(\"td\").text(d.count);\n    row.append(\"td\").text(isStopword ? \"NA\" : format(score)).style(\"background-color\", specificityScale(score));\n    row.append(\"td\").append(\"button\").text(stopwords[d.word] ? \"unstop\" : \"stop\").on(\"click\", function () {\n      console.log(d.word);\n\n      if (!isStopword) {\n        addStop(d.word);\n      } else {\n        removeStop(d.word);\n      }\n    });\n  });\n}\n\nfunction mostFrequentWords(includeStops, sortByTopic) {\n  // Convert the random-access map to a list of word:count pairs that\n  //  we can then sort.\n  var wordCounts = [];\n\n  if (sortByTopic) {\n    for (var word in vocabularyCounts) {\n      if (wordTopicCounts[word] && wordTopicCounts[word][selectedTopic]) {\n        wordCounts.push({\n          \"word\": word,\n          \"count\": wordTopicCounts[word][selectedTopic]\n        });\n      }\n    }\n  } else {\n    for (var word in vocabularyCounts) {\n      if (includeStops || !stopwords[word]) {\n        wordCounts.push({\n          \"word\": word,\n          \"count\": vocabularyCounts[word]\n        });\n      }\n    }\n  }\n\n  wordCounts.sort(byCountDescending);\n  return wordCounts;\n}\n\nfunction specificity(word) {\n  return 1.0 - entropy(d3.values(wordTopicCounts[word])) / Math.log(numTopics);\n}\n\nfunction entropy(counts) {\n  counts = counts.filter(function (x) {\n    return x > 0.0;\n  });\n  var sum = d3.sum(counts);\n  return Math.log(sum) - 1.0 / sum * d3.sum(counts, function (x) {\n    return x * Math.log(x);\n  });\n}\n\nfunction addStop(word) {\n  stopwords[word] = 1;\n  vocabularySize--;\n  delete wordTopicCounts[word];\n  documents.forEach(function (currentDoc, i) {\n    var docTopicCounts = currentDoc.topicCounts;\n\n    for (var position = 0; position < currentDoc.tokens.length; position++) {\n      var token = currentDoc.tokens[position];\n\n      if (token.word === word) {\n        token.isStopword = true;\n        tokensPerTopic[token.topic]--;\n        docTopicCounts[token.topic]--;\n      }\n    }\n  });\n  sortTopicWords();\n  displayTopicWords();\n  reorderDocuments();\n  vocabTable();\n}\n\nfunction removeStop(word) {\n  delete stopwords[word];\n  vocabularySize++;\n  wordTopicCounts[word] = {};\n  var currentWordTopicCounts = wordTopicCounts[word];\n  documents.forEach(function (currentDoc, i) {\n    var docTopicCounts = currentDoc.topicCounts;\n\n    for (var position = 0; position < currentDoc.tokens.length; position++) {\n      var token = currentDoc.tokens[position];\n\n      if (token.word === word) {\n        token.isStopword = false;\n        tokensPerTopic[token.topic]++;\n        docTopicCounts[token.topic]++;\n\n        if (!currentWordTopicCounts[token.topic]) {\n          currentWordTopicCounts[token.topic] = 1;\n        } else {\n          currentWordTopicCounts[token.topic] += 1;\n        }\n      }\n    }\n  });\n  sortTopicWords();\n  displayTopicWords();\n  reorderDocuments();\n  vocabTable();\n}","map":{"version":3,"sources":["/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/funcs/vocab.js"],"names":["d3","select","on","displayingStopwords","innerText","vocabTable","sortVocabByTopic","format","wordFrequencies","mostFrequentWords","slice","table","selectAll","remove","forEach","d","isStopword","stopwords","word","score","specificity","row","append","text","style","count","specificityScale","console","log","addStop","removeStop","includeStops","sortByTopic","wordCounts","vocabularyCounts","wordTopicCounts","selectedTopic","push","sort","byCountDescending","entropy","values","Math","numTopics","counts","filter","x","sum","vocabularySize","documents","currentDoc","i","docTopicCounts","topicCounts","position","tokens","length","token","tokensPerTopic","topic","sortTopicWords","displayTopicWords","reorderDocuments","currentWordTopicCounts"],"mappings":"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","sourcesContent":["import './App.css';\nimport './funcs/processing.js'\nimport './funcs/processVars.js'\nimport './funcs/correlationVars.js'\nimport './funcs/correlation.js'\nimport './funcs/d3.min.js'\nimport './funcs/display'\nimport './funcs/displayVars'\nimport './funcs/docsUp'\nimport './funcs/docsUpVar'\nimport './funcs/downloads'\nimport './funcs/downloadsVars'\nimport './funcs/stoplist'\nimport './funcs/stoplistVars'\nimport './funcs/sweep'\nimport './funcs/sweepVars'\nimport './funcs/topicDocuments'\nimport './funcs/topictime'\nimport './funcs/topictimeVars'\nimport './funcs/topidDocVars'\nimport './funcs/vocab'\nimport './funcs/vocabVars'\nimport * as d3 from 'd3';\n\n\n\n\n\nd3.select(\"#showStops\").on(\"click\", function () {\n  if (displayingStopwords) {\n    displayingStopwords = false;\n    this.innerText = \"Show stopwords\";\n    vocabTable();\n  }\n  else {\n    displayingStopwords = true;\n    this.innerText = \"Hide stopwords\";\n    vocabTable();\n  }\n});\n\nd3.select(\"#sortVocabByTopic\").on(\"click\", function () {\n  if (sortVocabByTopic) {\n    sortVocabByTopic = false;\n    this.innerText = \"Sort by topic\";\n    vocabTable();\n  }\n  else {\n    sortVocabByTopic = true;\n    this.innerText = \"Sort by frequency\";\n    vocabTable();\n  }\n});\n\n// used by toggleTopicDocuments in topicdocuments, ready, changeNumTopics in processing, sweep in sweep\nfunction vocabTable() {\n    var format = d3.format(\".2g\");\n    var wordFrequencies = mostFrequentWords(displayingStopwords, sortVocabByTopic).slice(0, 499);\n    var table = d3.select(\"#vocab-table tbody\");\n    table.selectAll(\"tr\").remove();\n  \n    wordFrequencies.forEach(function (d) {\n      var isStopword = stopwords[d.word];\n      var score = specificity(d.word);\n      var row = table.append(\"tr\");\n      row.append(\"td\").text(d.word).style(\"color\", isStopword ? \"#444444\" : \"#000000\");\n      row.append(\"td\").text(d.count);\n      row.append(\"td\").text(isStopword ? \"NA\" : format(score))\n      .style(\"background-color\", specificityScale(score));\n      row.append(\"td\").append(\"button\").text(stopwords[d.word] ? \"unstop\" : \"stop\")\n      .on(\"click\", function () {\n        console.log(d.word);\n        if (! isStopword) { addStop(d.word); }\n        else { removeStop(d.word); }\n      });\n    });\n  }\n\nfunction mostFrequentWords(includeStops, sortByTopic) {\n    // Convert the random-access map to a list of word:count pairs that\n    //  we can then sort.\n    var wordCounts = [];\n  \n    if (sortByTopic) {\n      for (var word in vocabularyCounts) {\n        if (wordTopicCounts[word] &&\n          wordTopicCounts[word][selectedTopic]) {\n          wordCounts.push({\"word\":word,\n                   \"count\":wordTopicCounts[word][selectedTopic]});\n        }\n      }\n    }\n    else {\n      for (var word in vocabularyCounts) {\n        if (includeStops || ! stopwords[word]) {\n          wordCounts.push({\"word\":word,\n                   \"count\":vocabularyCounts[word]});\n        }\n      }\n    }\n  \n    wordCounts.sort(byCountDescending);\n    return wordCounts;\n  }\n\nfunction specificity(word) {\n    return 1.0 - (entropy(d3.values(wordTopicCounts[word])) / Math.log(numTopics));\n  }\n\nfunction entropy(counts) {\n    counts = counts.filter(function (x) { return x > 0.0; });\n    var sum = d3.sum(counts);\n    return Math.log(sum) - (1.0 / sum) * d3.sum(counts, function (x) { return x * Math.log(x); });\n  }\n\nfunction addStop(word) {\n    stopwords[word] = 1;\n    vocabularySize--;\n    delete wordTopicCounts[word];\n  \n      documents.forEach( function( currentDoc, i ) {\n      var docTopicCounts = currentDoc.topicCounts;\n      for (var position = 0; position < currentDoc.tokens.length; position++) {\n        var token = currentDoc.tokens[position];\n        if (token.word === word) {\n          token.isStopword = true;\n          tokensPerTopic[ token.topic ]--;\n          docTopicCounts[ token.topic ]--;\n        }\n      }\n    });\n  \n    sortTopicWords();\n    displayTopicWords();\n    reorderDocuments();\n    vocabTable();\n  }\n\nfunction removeStop(word) {\n    delete stopwords[word];\n    vocabularySize++;\n    wordTopicCounts[word] = {};\n    var currentWordTopicCounts = wordTopicCounts[ word ];\n  \n      documents.forEach( function( currentDoc, i ) {\n      var docTopicCounts = currentDoc.topicCounts;\n      for (var position = 0; position < currentDoc.tokens.length; position++) {\n        var token = currentDoc.tokens[position];\n        if (token.word === word) {\n          token.isStopword = false;\n          tokensPerTopic[ token.topic ]++;\n          docTopicCounts[ token.topic ]++;\n          if (! currentWordTopicCounts[ token.topic ]) {\n            currentWordTopicCounts[ token.topic ] = 1;\n          }\n          else {\n            currentWordTopicCounts[ token.topic ] += 1;\n          }\n        }\n      }\n    });\n  \n    sortTopicWords();\n    displayTopicWords();\n    reorderDocuments();\n    vocabTable();\n  }\n\n"]},"metadata":{},"sourceType":"module"}