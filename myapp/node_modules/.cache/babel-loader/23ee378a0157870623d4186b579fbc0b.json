{"ast":null,"code":"var _jsxFileName = \"/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/sidebar.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topNWords: function (wordCounts, n) {\n        return wordCounts.slice(0, n).map(function (d) {\n          return d.word;\n        }).join(\" \");\n      },\n      // Used in timeSeries\n      selectTopic: -1\n    };\n  } // Used by ready, changeNumTopics in processing, addStop, removeStop in vocab, sweep in sweep\n\n\n  displayTopicWords() {\n    var topicTopWords = [];\n\n    for (var topic = 0; topic < this.props.numTopics; topic++) {\n      topicTopWords.push(this.state.topNWords(this.props.topicWordCounts[topic], 10));\n    }\n\n    var topicLines = d3.select(\"div#topics\").selectAll(\"div.topicwords\").data(topicTopWords);\n    topicLines.exit().remove();\n    topicLines = topicLines.enter().append(\"div\").attr(\"class\", \"topicwords\").on(\"click\", function (d, i) {\n      this.toggleTopicDocuments(i);\n    }).merge(topicLines);\n    topicLines.transition().text(function (d, i) {\n      return \"[\" + i + \"] \" + d;\n    });\n    return this.props.topicWordCounts;\n  } // Used by displayTopicWords in display\n\n\n  toggleTopicDocuments(topic) {\n    if (topic === this.state.selectTopic) {\n      // unselect the topic\n      d3.selectAll(\"div.topicwords\").attr(\"class\", \"topicwords\");\n      this.setState({\n        selectTopic: -1\n      });\n      sortVocabByTopic = false;\n      d3.select(\"#sortVocabByTopic\").text(\"Sort by topic\");\n    } else {\n      d3.selectAll(\"div.topicwords\").attr(\"class\", function (d, i) {\n        return i === topic ? \"topicwords selected\" : \"topicwords\";\n      });\n      this.setState({\n        selectTopic: topic\n      });\n    }\n\n    reorderDocuments();\n    vocabTable();\n  }\n\n  componentDidMount() {}\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.selectedTopic != state.selectTopic) {\n      return {\n        selectTopic: props.selectedTopic\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"topics\",\n      className: \"sidebox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SideBar;","map":{"version":3,"sources":["/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/sidebar.js"],"names":["React","Component","d3","SideBar","constructor","props","state","topNWords","wordCounts","n","slice","map","d","word","join","selectTopic","displayTopicWords","topicTopWords","topic","numTopics","push","topicWordCounts","topicLines","select","selectAll","data","exit","remove","enter","append","attr","on","i","toggleTopicDocuments","merge","transition","text","setState","sortVocabByTopic","reorderDocuments","vocabTable","componentDidMount","getDerivedStateFromProps","selectedTopic","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport * as d3 from 'd3';\n\nclass SideBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          topNWords: function(wordCounts, n) { return wordCounts.slice(0,n).map( function(d) { return d.word; }).join(\" \"); }, // Used in timeSeries\n          selectTopic: -1\n        };\n      }\n\n    // Used by ready, changeNumTopics in processing, addStop, removeStop in vocab, sweep in sweep\n    displayTopicWords() {\n        var topicTopWords = [];\n    \n        for (var topic = 0; topic < this.props.numTopics; topic++) {\n        topicTopWords.push(this.state.topNWords(this.props.topicWordCounts[topic], 10));\n        }\n    \n        var topicLines = d3.select(\"div#topics\").selectAll(\"div.topicwords\")\n        .data(topicTopWords);\n    \n        topicLines.exit().remove();\n        \n        topicLines = topicLines\n        .enter().append(\"div\")\n        .attr(\"class\", \"topicwords\")\n        .on(\"click\", function(d, i) { this.toggleTopicDocuments(i); })\n        .merge(topicLines);\n        \n        topicLines.transition().text(function(d, i) { return \"[\" + i + \"] \" + d; });\n    \n        return this.props.topicWordCounts;\n    }\n\n    // Used by displayTopicWords in display\n    toggleTopicDocuments(topic) {\n        if (topic === this.state.selectTopic) {\n        // unselect the topic\n        d3.selectAll(\"div.topicwords\").attr(\"class\", \"topicwords\");\n        this.setState({selectTopic: -1});\n    \n        sortVocabByTopic = false;\n        d3.select(\"#sortVocabByTopic\").text(\"Sort by topic\")\n        }\n        else {\n        d3.selectAll(\"div.topicwords\").attr(\"class\", function(d, i) { return i === topic ? \"topicwords selected\" : \"topicwords\"; });\n        this.setState({selectTopic: topic});\n        }\n        reorderDocuments();\n        vocabTable();\n    }\n    \n    componentDidMount() {\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.selectedTopic != state.selectTopic) {\n            return {selectTopic: props.selectedTopic};\n        }\n        return null;\n    }\n\n    render() {\n        return (\n        <div className=\"sidebar\">\n\n        <div id=\"topics\" className=\"sidebox\">\n        </div>\n  \n        </div>\n        )\n    }\n}\n\nexport default SideBar"]},"metadata":{},"sourceType":"module"}