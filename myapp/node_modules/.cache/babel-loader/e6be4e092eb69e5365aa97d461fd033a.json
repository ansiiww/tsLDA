{"ast":null,"code":"var _jsxFileName = \"/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/sidebar.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.selectedTopicChange = this.props.selectedTopicChange;\n    this.state = {\n      topNWords: function (wordCounts, n) {\n        return wordCounts.slice(0, n).map(function (d) {\n          return d.word;\n        }).join(\" \");\n      } // Used in timeSeries\n\n    };\n  }\n\n  // Used by ready, changeNumTopics in processing, addStop, removeStop in vocab, sweep in sweep\n  displayTopicWords() {\n    var topicTopWords = [];\n\n    for (var topic = 0; topic < this.props.numTopics; topic++) {\n      topicTopWords.push(this.state.topNWords(this.props.topicWordCounts[topic], 10));\n    }\n\n    var topicLines = d3.select(\"div#topics\").selectAll(\"div.topicwords\").data(topicTopWords);\n    topicLines.exit().remove();\n    topicLines = topicLines.enter().append(\"div\").attr(\"class\", \"topicwords\").on(\"click\", function (d, i) {\n      this.toggleTopicDocuments(i);\n    }).merge(topicLines);\n    topicLines.transition().text(function (d, i) {\n      return \"[\" + i + \"] \" + d;\n    });\n    return this.props.topicWordCounts;\n  } // Used by displayTopicWords in display\n\n\n  toggleTopicDocuments(topic) {\n    if (topic === this.props.selectedTopic) {\n      // unselect the topic\n      d3.selectAll(\"div.topicwords\").attr(\"class\", \"topicwords\");\n      sortVocabByTopic = false;\n      d3.select(\"#sortVocabByTopic\").text(\"Sort by topic\");\n      this.selectedTopicChange(-1);\n    } else {\n      d3.selectAll(\"div.topicwords\").attr(\"class\", function (d, i) {\n        return i === topic ? \"topicwords selected\" : \"topicwords\";\n      });\n      this.selectedTopicChange(topic);\n    } // reorderDocuments();\n\n\n    vocabTable();\n  }\n\n  componentDidMount() {}\n\n  static getDerivedStateFromProps(props, state) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"topics\",\n      className: \"sidebox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SideBar;","map":{"version":3,"sources":["/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/sidebar.js"],"names":["React","Component","d3","SideBar","constructor","props","selectedTopicChange","state","topNWords","wordCounts","n","slice","map","d","word","join","displayTopicWords","topicTopWords","topic","numTopics","push","topicWordCounts","topicLines","select","selectAll","data","exit","remove","enter","append","attr","on","i","toggleTopicDocuments","merge","transition","text","selectedTopic","sortVocabByTopic","vocabTable","componentDidMount","getDerivedStateFromProps","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport * as d3 from 'd3';\n\nclass SideBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          topNWords: function(wordCounts, n) { return wordCounts.slice(0,n).map( function(d) { return d.word; }).join(\" \"); }, // Used in timeSeries\n        };\n      }\n\n    selectedTopicChange = this.props.selectedTopicChange;\n\n    // Used by ready, changeNumTopics in processing, addStop, removeStop in vocab, sweep in sweep\n    displayTopicWords() {\n        var topicTopWords = [];\n    \n        for (var topic = 0; topic < this.props.numTopics; topic++) {\n        topicTopWords.push(this.state.topNWords(this.props.topicWordCounts[topic], 10));\n        }\n    \n        var topicLines = d3.select(\"div#topics\").selectAll(\"div.topicwords\")\n        .data(topicTopWords);\n    \n        topicLines.exit().remove();\n        \n        topicLines = topicLines\n        .enter().append(\"div\")\n        .attr(\"class\", \"topicwords\")\n        .on(\"click\", function(d, i) { this.toggleTopicDocuments(i); })\n        .merge(topicLines);\n        \n        topicLines.transition().text(function(d, i) { return \"[\" + i + \"] \" + d; });\n    \n        return this.props.topicWordCounts;\n    }\n\n    // Used by displayTopicWords in display\n    toggleTopicDocuments(topic) {\n        if (topic === this.props.selectedTopic) {\n        // unselect the topic\n        d3.selectAll(\"div.topicwords\").attr(\"class\", \"topicwords\");\n\n        sortVocabByTopic = false;\n        d3.select(\"#sortVocabByTopic\").text(\"Sort by topic\")\n\n        this.selectedTopicChange(-1);\n        }\n        else {\n        d3.selectAll(\"div.topicwords\").attr(\"class\", function(d, i) { return i === topic ? \"topicwords selected\" : \"topicwords\"; });\n        this.selectedTopicChange(topic);\n        }\n        // reorderDocuments();\n        vocabTable();\n    }\n    \n    componentDidMount() {\n    }\n\n    static getDerivedStateFromProps(props, state) {\n    }\n\n    render() {\n        return (\n        <div className=\"sidebar\">\n\n        <div id=\"topics\" className=\"sidebox\">\n        </div>\n  \n        </div>\n        )\n    }\n}\n\nexport default SideBar"]},"metadata":{},"sourceType":"module"}