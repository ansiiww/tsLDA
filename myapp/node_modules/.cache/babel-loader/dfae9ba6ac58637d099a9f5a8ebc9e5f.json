{"ast":null,"code":"// Used for numTopics\n\n/** This function is copied from stack overflow: http://stackoverflow.com/users/19068/quentin */\nvar QueryString = function () {\n  // This function is anonymous, is executed immediately and\n  // the return value is assigned to QueryString!\n  var query_string = {};\n  var query = window.location.search.substring(1);\n  var vars = query.split(\"&\");\n\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\"); // If first entry with this name\n\n    if (typeof query_string[pair[0]] === \"undefined\") {\n      query_string[pair[0]] = pair[1]; // If second entry with this name\n    } else if (typeof query_string[pair[0]] === \"string\") {\n      var arr = [query_string[pair[0]], pair[1]];\n      query_string[pair[0]] = arr; // If third or later entry with this name\n    } else {\n      query_string[pair[0]].push(pair[1]);\n    }\n  }\n\n  return query_string;\n}(); // Where is it used?\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n\nif (!Object.keys) {\n  Object.keys = function () {\n    'use strict';\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\n        hasDontEnumBug = !{\n      toString: null\n    }.propertyIsEnumerable('toString'),\n        dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],\n        dontEnumsLength = dontEnums.length;\n    return function (obj) {\n      if (typeof obj !== 'function' && (typeof obj !== 'object' || obj === null)) {\n        throw new TypeError('Object.keys called on non-object');\n      }\n\n      var result = [],\n          prop,\n          i;\n\n      for (prop in obj) {\n        if (hasOwnProperty.call(obj, prop)) {\n          result.push(prop);\n        }\n      }\n\n      if (hasDontEnumBug) {\n        for (i = 0; i < dontEnumsLength; i++) {\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\n            result.push(dontEnums[i]);\n          }\n        }\n      }\n\n      return result;\n    };\n  }();\n}\n\nfunction findNumTopics() {\n  numTopics = QueryString.topics ? parseInt(QueryString.topics) : 25;\n\n  if (isNaN(numTopics)) {\n    alert(\"The requested number of topics [\" + QueryString.topics + \"] couldn't be interpreted as a number\");\n    numTopics = 25;\n  }\n}\n\nfunction zeros(n) {\n  var x = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    x[i] = 0.0;\n  }\n\n  return x;\n}","map":{"version":3,"sources":["/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/funcs/process.js"],"names":["QueryString","query_string","query","window","location","search","substring","vars","split","i","length","pair","arr","push","Object","keys","hasOwnProperty","prototype","hasDontEnumBug","toString","propertyIsEnumerable","dontEnums","dontEnumsLength","obj","TypeError","result","prop","call","findNumTopics","numTopics","topics","parseInt","isNaN","alert","zeros","n","x","Array"],"mappings":"AAAA;;AACA;AACA,IAAIA,WAAW,GAAG,YAAY;AAC1B;AACA;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC,CAAjC,CAAZ;AACA,MAAIC,IAAI,GAAGL,KAAK,CAACM,KAAN,CAAY,GAAZ,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,IAAI,CAACG,MAApB,EAA2BD,CAAC,EAA5B,EAAgC;AAC9B,QAAIE,IAAI,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQD,KAAR,CAAc,GAAd,CAAX,CAD8B,CAE9B;;AACA,QAAI,OAAOP,YAAY,CAACU,IAAI,CAAC,CAAD,CAAL,CAAnB,KAAiC,WAArC,EAAkD;AAChDV,MAAAA,YAAY,CAACU,IAAI,CAAC,CAAD,CAAL,CAAZ,GAAwBA,IAAI,CAAC,CAAD,CAA5B,CADgD,CAElD;AACC,KAHD,MAGO,IAAI,OAAOV,YAAY,CAACU,IAAI,CAAC,CAAD,CAAL,CAAnB,KAAiC,QAArC,EAA+C;AACpD,UAAIC,GAAG,GAAG,CAAEX,YAAY,CAACU,IAAI,CAAC,CAAD,CAAL,CAAd,EAAyBA,IAAI,CAAC,CAAD,CAA7B,CAAV;AACAV,MAAAA,YAAY,CAACU,IAAI,CAAC,CAAD,CAAL,CAAZ,GAAwBC,GAAxB,CAFoD,CAGtD;AACC,KAJM,MAIA;AACLX,MAAAA,YAAY,CAACU,IAAI,CAAC,CAAD,CAAL,CAAZ,CAAsBE,IAAtB,CAA2BF,IAAI,CAAC,CAAD,CAA/B;AACD;AACF;;AACC,SAAOV,YAAP;AACH,CArBe,EAAlB,C,CAuBE;AACF;;;AACA,IAAI,CAACa,MAAM,CAACC,IAAZ,EAAkB;AACdD,EAAAA,MAAM,CAACC,IAAP,GAAe,YAAW;AACxB;;AACA,QAAIC,cAAc,GAAGF,MAAM,CAACG,SAAP,CAAiBD,cAAtC;AAAA,QACIE,cAAc,GAAG,CAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAqBC,oBAArB,CAA0C,UAA1C,CADtB;AAAA,QAEIC,SAAS,GAAG,CACV,UADU,EAEV,gBAFU,EAGV,SAHU,EAIV,gBAJU,EAKV,eALU,EAMV,sBANU,EAOV,aAPU,CAFhB;AAAA,QAWIC,eAAe,GAAGD,SAAS,CAACX,MAXhC;AAaA,WAAO,UAASa,GAAT,EAAc;AACnB,UAAI,OAAOA,GAAP,KAAe,UAAf,KAA8B,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAjE,CAAJ,EAA4E;AAC1E,cAAM,IAAIC,SAAJ,CAAc,kCAAd,CAAN;AACD;;AAED,UAAIC,MAAM,GAAG,EAAb;AAAA,UAAiBC,IAAjB;AAAA,UAAuBjB,CAAvB;;AAEA,WAAKiB,IAAL,IAAaH,GAAb,EAAkB;AAChB,YAAIP,cAAc,CAACW,IAAf,CAAoBJ,GAApB,EAAyBG,IAAzB,CAAJ,EAAoC;AAClCD,UAAAA,MAAM,CAACZ,IAAP,CAAYa,IAAZ;AACD;AACF;;AAED,UAAIR,cAAJ,EAAoB;AAClB,aAAKT,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGa,eAAhB,EAAiCb,CAAC,EAAlC,EAAsC;AACpC,cAAIO,cAAc,CAACW,IAAf,CAAoBJ,GAApB,EAAyBF,SAAS,CAACZ,CAAD,CAAlC,CAAJ,EAA4C;AAC1CgB,YAAAA,MAAM,CAACZ,IAAP,CAAYQ,SAAS,CAACZ,CAAD,CAArB;AACD;AACF;AACF;;AACD,aAAOgB,MAAP;AACD,KArBD;AAsBD,GArCc,EAAf;AAsCD;;AAEH,SAASG,aAAT,GAAyB;AACvBC,EAAAA,SAAS,GAAG7B,WAAW,CAAC8B,MAAZ,GAAqBC,QAAQ,CAAC/B,WAAW,CAAC8B,MAAb,CAA7B,GAAoD,EAAhE;;AACA,MAAIE,KAAK,CAACH,SAAD,CAAT,EAAsB;AACtBI,IAAAA,KAAK,CAAC,qCAAqCjC,WAAW,CAAC8B,MAAjD,GAA0D,uCAA3D,CAAL;AACAD,IAAAA,SAAS,GAAG,EAAZ;AACC;AACF;;AAED,SAASK,KAAT,CAAeC,CAAf,EAAkB;AAChB,MAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAUF,CAAV,CAAR;;AACA,OAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,CAApB,EAAuB1B,CAAC,EAAxB,EAA4B;AAAE2B,IAAAA,CAAC,CAAC3B,CAAD,CAAD,GAAO,GAAP;AAAa;;AAC3C,SAAO2B,CAAP;AACD","sourcesContent":["// Used for numTopics\n/** This function is copied from stack overflow: http://stackoverflow.com/users/19068/quentin */\nvar QueryString = function () {\n    // This function is anonymous, is executed immediately and\n    // the return value is assigned to QueryString!\n    var query_string = {};\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&\");\n    for (var i=0;i<vars.length;i++) {\n      var pair = vars[i].split(\"=\");\n      // If first entry with this name\n      if (typeof query_string[pair[0]] === \"undefined\") {\n        query_string[pair[0]] = pair[1];\n      // If second entry with this name\n      } else if (typeof query_string[pair[0]] === \"string\") {\n        var arr = [ query_string[pair[0]], pair[1] ];\n        query_string[pair[0]] = arr;\n      // If third or later entry with this name\n      } else {\n        query_string[pair[0]].push(pair[1]);\n      }\n    }\n      return query_string;\n  } ();\n\n  // Where is it used?\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\nif (!Object.keys) {\n    Object.keys = (function() {\n      'use strict';\n      var hasOwnProperty = Object.prototype.hasOwnProperty,\n          hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n          dontEnums = [\n            'toString',\n            'toLocaleString',\n            'valueOf',\n            'hasOwnProperty',\n            'isPrototypeOf',\n            'propertyIsEnumerable',\n            'constructor'\n          ],\n          dontEnumsLength = dontEnums.length;\n  \n      return function(obj) {\n        if (typeof obj !== 'function' && (typeof obj !== 'object' || obj === null)) {\n          throw new TypeError('Object.keys called on non-object');\n        }\n  \n        var result = [], prop, i;\n  \n        for (prop in obj) {\n          if (hasOwnProperty.call(obj, prop)) {\n            result.push(prop);\n          }\n        }\n  \n        if (hasDontEnumBug) {\n          for (i = 0; i < dontEnumsLength; i++) {\n            if (hasOwnProperty.call(obj, dontEnums[i])) {\n              result.push(dontEnums[i]);\n            }\n          }\n        }\n        return result;\n      };\n    }());\n  }\n\nfunction findNumTopics() {\n  numTopics = QueryString.topics ? parseInt(QueryString.topics) : 25;\n  if (isNaN(numTopics)) {\n  alert(\"The requested number of topics [\" + QueryString.topics + \"] couldn't be interpreted as a number\");\n  numTopics = 25;\n  }\n}\n\nfunction zeros(n) {\n  var x = new Array(n);\n  for (var i = 0; i < n; i++) { x[i] = 0.0; }\n  return x;\n}"]},"metadata":{},"sourceType":"module"}