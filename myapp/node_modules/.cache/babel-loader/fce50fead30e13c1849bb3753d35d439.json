{"ast":null,"code":"var _jsxFileName = \"/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\nimport Correlation from './corpage';\n\nvar XRegExp = require('xregexp'); // Where is it used?\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n\nif (!Object.keys) {\n  Object.keys = function () {\n    'use strict';\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\n        hasDontEnumBug = !{\n      toString: null\n    }.propertyIsEnumerable('toString'),\n        dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],\n        dontEnumsLength = dontEnums.length;\n    return function (obj) {\n      if (typeof obj !== 'function' && (typeof obj !== 'object' || obj === null)) {\n        throw new TypeError('Object.keys called on non-object');\n      }\n\n      var result = [],\n          prop,\n          i;\n\n      for (prop in obj) {\n        if (hasOwnProperty.call(obj, prop)) {\n          result.push(prop);\n        }\n      }\n\n      if (hasDontEnumBug) {\n        for (i = 0; i < dontEnumsLength; i++) {\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\n            result.push(dontEnums[i]);\n          }\n        }\n      }\n\n      return result;\n    };\n  }();\n} // Used for numTopics\n\n/** This function is copied from stack overflow: http://stackoverflow.com/users/19068/quentin */\n\n\nvar QueryString = function () {\n  // This function is anonymous, is executed immediately and\n  // the return value is assigned to QueryString!\n  var query_string = {};\n  var query = window.location.search.substring(1);\n  var vars = query.split(\"&\");\n\n  for (var i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\"); // If first entry with this name\n\n    if (typeof query_string[pair[0]] === \"undefined\") {\n      query_string[pair[0]] = pair[1]; // If second entry with this name\n    } else if (typeof query_string[pair[0]] === \"string\") {\n      var arr = [query_string[pair[0]], pair[1]];\n      query_string[pair[0]] = arr; // If third or later entry with this name\n    } else {\n      query_string[pair[0]].push(pair[1]);\n    }\n  }\n\n  return query_string;\n}();\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Vocabulary statistics\n      // Needed by reset & parseline\n      vocabularySize: 0,\n      // needed by reset & parseline, changeNumTopics\n      vocabularyCounts: {},\n      //needed by reset\n      displayingStopwords: false,\n      sortVocabByTopic: false,\n      specificityScale: d3.scaleLinear().domain([0, 1]).range([\"#ffffff\", \"#99d8c9\"]),\n      // Topic model parameters\n      // needed by reset & sortTopicWords, changeNumTopics\n      numTopics: 0,\n      // run findNumTopics upon mount\n      // required by reset & ready & parseline\n      stopwords: {},\n      // required by reset, changeNumTopics\n      completeSweeps: 0,\n      requestedSweeps: 0,\n      // in reset, changeNumTopics\n      selectedTopic: -1,\n      // Needed by reset & parseline & sortTopicWords, changeNumTopics\n      wordTopicCounts: {},\n      // Needed by reset & sortTopicWords, changeNumTopics\n      topicWordCounts: [],\n      // Needed by reset & parseline, changeNumTopics\n      tokensPerTopic: [],\n      // set to zeros(numTopics)\n      // in reset, changeNumTopics\n      topicWeights: [],\n      // set to zeros(numTopics)\n      // used by reset & parseline, changeNumTopics\n      documents: [],\n      // used by sortTopicWords\n      byCountDescending: function (a, b) {\n        return b.count - a.count;\n      },\n      // used by parseLine\n      truncate: function (s) {\n        return s.length > 300 ? s.substring(0, 299) + \"...\" : s;\n      },\n      wordPattern: XRegExp(\"\\\\p{L}[\\\\p{L}\\\\p{P}]*\\\\p{L}\", \"g\"),\n      // Constants for calculating topic correlation. A doc with 5% or more tokens in a topic is \"about\" that topic.\n      correlationMinTokens: 2,\n      // used by getTopicCorrelations\n      correlationMinProportion: 0.05,\n      // used by getTopicCorrelations  \n      topNWords: function (wordCounts, n) {\n        return wordCounts.slice(0, n).map(function (d) {\n          return d.word;\n        }).join(\" \");\n      },\n      // Used in timeSeries\n      timer: 0,\n      // used in sweep\n      documentTopicSmoothing: 0.1,\n      // (used by sweep)\n      topicWordSmoothing: 0.01 // (used by sweep)\n\n    };\n  }\n\n  findNumTopics() {\n    this.setState({\n      numTopics: QueryString.topics ? parseInt(QueryString.topics) : 25\n    });\n\n    if (isNaN(this.state.numTopics)) {\n      alert(\"The requested number of topics [\" + QueryString.topics + \"] couldn't be interpreted as a number\");\n      this.setState({\n        numTopics: 25\n      });\n    }\n  }\n\n  zeros(n) {\n    var x = new Array(n);\n\n    for (var i = 0; i < n; i++) {\n      x[i] = 0.0;\n    }\n\n    return x;\n  }\n\n  queueLoad() {\n    this.reset();\n    Promise.all([this.getStoplistUpload(), this.getDocsUpload()]).then(function ([stops, lines]) {\n      this.ready(null, stops, lines);\n    }).catch(function (err) {\n      this.ready(err, null, null);\n    });\n  }\n\n  reset() {\n    this.vocabularySize = 0;\n    this.vocabularyCounts = {};\n    this.displayingStopwords = false;\n    this.sortVocabByTopic = false;\n    this.specificityScale = d3.scaleLinear().domain([0, 1]).range([\"#ffffff\", \"#99d8c9\"]);\n    d3.select(\"#num-topics-input\").property(\"value\", this.numTopics);\n    this.stopwords = {};\n    this.completeSweeps = 0;\n    this.requestedSweeps = 0;\n    d3.select(\"#iters\").text(this.completeSweeps);\n    this.selectedTopic = -1;\n    this.wordTopicCounts = {};\n    this.topicWordCounts = [];\n    this.tokensPerTopic = this.zeros(this.numTopics);\n    this.topicWeights = this.zeros(this.numTopics);\n    this.documents = [];\n    d3.selectAll(\"div.document\").remove();\n  }\n\n  ready(error, stops, lines) {\n    if (error) {\n      alert(\"File upload failed. Please try again.\");\n      throw error;\n    } else {\n      // Create the stoplist\n      console.log(stops);\n      stops.split(/\\s+/).forEach(function (w) {\n        console.log(w);\n        this.stopwords[w] = 1;\n      }); // Load documents and populate the vocabulary\n\n      lines.split(\"\\n\").forEach(this.parseLine);\n      this.sortTopicWords();\n      displayTopicWords();\n      toggleTopicDocuments(0); //plotGraph();\n\n      plotMatrix();\n      vocabTable();\n      createTimeSVGs();\n      timeSeries();\n    }\n  }\n\n  parseLine(line) {\n    if (line == \"\") {\n      return;\n    }\n\n    var docID = this.documents.length;\n    var docDate = \"\";\n    var fields = line.split(\"\\t\");\n    var text = fields[0]; // Assume there's just one field, the text\n\n    if (fields.length == 3) {\n      // If it's in [ID]\\t[TAG]\\t[TEXT] format...\n      docID = fields[0];\n      docDate = fields[1]; // do not interpret date as anything but a string\n\n      text = fields[2];\n    }\n\n    var tokens = [];\n    var rawTokens = text.toLowerCase().match(this.wordPattern);\n\n    if (rawTokens == null) {\n      return;\n    }\n\n    var topicCounts = this.zeros(this.numTopics);\n    rawTokens.forEach(function (word) {\n      if (word !== \"\") {\n        var topic = Math.floor(Math.random() * this.numTopics);\n\n        if (word.length <= 2) {\n          this.stopwords[word] = 1;\n        }\n\n        var isStopword = this.stopwords[word];\n\n        if (isStopword) {\n          // Record counts for stopwords, but nothing else\n          if (!this.vocabularyCounts[word]) {\n            this.vocabularyCounts[word] = 1;\n          } else {\n            this.vocabularyCounts[word] += 1;\n          }\n        } else {\n          this.tokensPerTopic[topic]++;\n\n          if (!this.wordTopicCounts[word]) {\n            this.wordTopicCounts[word] = {};\n            this.vocabularySize++;\n            this.vocabularyCounts[word] = 0;\n          }\n\n          if (!this.wordTopicCounts[word][topic]) {\n            this.wordTopicCounts[word][topic] = 0;\n          }\n\n          this.wordTopicCounts[word][topic] += 1;\n          this.vocabularyCounts[word] += 1;\n          this.topicCounts[topic] += 1;\n        }\n\n        tokens.push({\n          \"word\": word,\n          \"topic\": topic,\n          \"isStopword\": isStopword\n        });\n      }\n    });\n    this.documents.push({\n      \"originalOrder\": this.documents.length,\n      \"id\": docID,\n      \"date\": docDate,\n      \"originalText\": text,\n      \"tokens\": tokens,\n      \"topicCounts\": topicCounts\n    }); // Need to move this selection and adding to #docs-page into a different component\n\n    d3.select(\"div#docs-page\").append(\"div\").attr(\"class\", \"document\").text(\"[\" + docID + \"] \" + this.truncate(text));\n  } // used by addStop, removeStop in vocab, saveTopicKeys in downloads, sweep in sweep\n\n\n  sortTopicWords() {\n    this.topicWordCounts = [];\n\n    for (var topic = 0; topic < this.numTopics; topic++) {\n      this.topicWordCounts[topic] = [];\n    }\n\n    for (var word in this.wordTopicCounts) {\n      for (var topic in this.wordTopicCounts[word]) {\n        this.topicWordCounts[topic].push({\n          \"word\": word,\n          \"count\": this.wordTopicCounts[word][topic]\n        });\n      }\n    }\n\n    for (var topic = 0; topic < this.numTopics; topic++) {\n      this.topicWordCounts[topic].sort(this.byCountDescending);\n    }\n  } // This function is the callback for \"input\", it changes as we move the slider\n  //  without releasing it.\n\n\n  updateTopicCount(input) {\n    d3.select(\"#num_topics_display\").text(input.value);\n  } // This function is the callback for \"change\", it only fires when we release the\n  //  slider to select a new value.\n\n\n  onTopicsChange(input) {\n    console.log(\"Changing # of topics: \" + input.value);\n    var newNumTopics = Number(input.value);\n\n    if (!isNaN(newNumTopics) && newNumTopics > 0 && newNumTopics !== this.numTopics) {\n      this.changeNumTopics(Number(input.value));\n    }\n  }\n\n  changeNumTopics(numTopics_) {\n    this.numTopics = numTopics_;\n    this.selectedTopic = -1;\n    this.completeSweeps = 0;\n    this.requestedSweeps = 0;\n    d3.select(\"#iters\").text(this.completeSweeps);\n    this.wordTopicCounts = {};\n    Object.keys(this.vocabularyCounts).forEach(function (word) {\n      this.wordTopicCounts[word] = {};\n    });\n    this.topicWordCounts = [];\n    this.tokensPerTopic = this.zeros(this.numTopics);\n    this.topicWeights = this.zeros(this.numTopics);\n    this.documents.forEach(function (currentDoc, i) {\n      currentDoc.topicCounts = this.zeros(this.numTopics);\n\n      for (var position = 0; position < currentDoc.tokens.length; position++) {\n        var token = currentDoc.tokens[position];\n        token.topic = Math.floor(Math.random() * this.numTopics);\n\n        if (!token.isStopword) {\n          this.tokensPerTopic[token.topic]++;\n\n          if (!this.wordTopicCounts[token.word][token.topic]) {\n            this.wordTopicCounts[token.word][token.topic] = 1;\n          } else {\n            this.wordTopicCounts[token.word][token.topic] += 1;\n          }\n\n          currentDoc.topicCounts[token.topic] += 1;\n        }\n      }\n    });\n    this.sortTopicWords();\n    displayTopicWords();\n    reorderDocuments();\n    vocabTable(); // Restart the visualizations\n\n    createTimeSVGs();\n    timeSeries();\n    plotMatrix({\n      numTopics: this.numTopics,\n      documents: this.documents,\n      correlationMinTokens: this.correlationMinTokens,\n      correlationMinProportion: this.correlationMinProportion,\n      topicWordCounts: this.topicWordCounts,\n      topNWords: this.topNWords,\n      zeros: this.zeros\n    });\n  }\n\n  sweep() {\n    var startTime = Date.now();\n    var topicNormalizers = zeros(this.numTopics);\n\n    for (var topic = 0; topic < this.numTopics; topic++) {\n      topicNormalizers[topic] = 1.0 / (this.vocabularySize * this.topicWordSmoothing + this.tokensPerTopic[topic]);\n    }\n\n    for (var doc = 0; doc < documents.length; doc++) {\n      var currentDoc = documents[doc];\n      var docTopicCounts = currentDoc.topicCounts;\n\n      for (var position = 0; position < currentDoc.tokens.length; position++) {\n        var token = currentDoc.tokens[position];\n\n        if (token.isStopword) {\n          continue;\n        }\n\n        tokensPerTopic[token.topic]--;\n        var currentWordTopicCounts = wordTopicCounts[token.word];\n        currentWordTopicCounts[token.topic]--;\n\n        if (currentWordTopicCounts[token.topic] == 0) {//delete(currentWordTopicCounts[ token.topic ]);\n        }\n\n        docTopicCounts[token.topic]--;\n        topicNormalizers[token.topic] = 1.0 / (vocabularySize * topicWordSmoothing + tokensPerTopic[token.topic]);\n        var sum = 0.0;\n\n        for (var topic = 0; topic < numTopics; topic++) {\n          if (currentWordTopicCounts[topic]) {\n            topicWeights[topic] = (documentTopicSmoothing + docTopicCounts[topic]) * (topicWordSmoothing + currentWordTopicCounts[topic]) * topicNormalizers[topic];\n          } else {\n            topicWeights[topic] = (documentTopicSmoothing + docTopicCounts[topic]) * topicWordSmoothing * topicNormalizers[topic];\n          }\n\n          sum += topicWeights[topic];\n        } // Sample from an unnormalized discrete distribution\n\n\n        var sample = sum * Math.random();\n        var i = 0;\n        sample -= topicWeights[i];\n\n        while (sample > 0.0) {\n          i++;\n          sample -= topicWeights[i];\n        }\n\n        token.topic = i;\n        tokensPerTopic[token.topic]++;\n\n        if (!currentWordTopicCounts[token.topic]) {\n          currentWordTopicCounts[token.topic] = 1;\n        } else {\n          currentWordTopicCounts[token.topic] += 1;\n        }\n\n        docTopicCounts[token.topic]++;\n        topicNormalizers[token.topic] = 1.0 / (vocabularySize * topicWordSmoothing + tokensPerTopic[token.topic]);\n      }\n    } //console.log(\"sweep in \" + (Date.now() - startTime) + \" ms\");\n\n\n    completeSweeps += 1;\n    d3.select(\"#iters\").text(completeSweeps);\n\n    if (completeSweeps >= requestedSweeps) {\n      reorderDocuments();\n      sortTopicWords();\n      displayTopicWords();\n      plotMatrix();\n      vocabTable();\n      timeSeries();\n      timer.stop();\n    }\n  }\n\n  componentDidMount() {\n    this.findNumTopics(); // Set upon initialisation, changed to new numTopics in reset\n\n    d3.select(\"#num-topics-input\").attr(\"value\", this.state.numTopics);\n    this.setState({\n      tokensPerTopic: this.zeros(this.state.numTopics)\n    });\n    this.setState({\n      topicWeights: this.zeros(this.state.numTopics)\n    }); // used by parseLine\n\n    d3.select(\"#docs-tab\").on(\"click\", function () {\n      d3.selectAll(\".page\").style(\"display\", \"none\");\n      d3.selectAll(\"ul li\").attr(\"className\", \"\");\n      d3.select(\"#docs-page\").style(\"display\", \"block\");\n      d3.select(\"#docs-tab\").attr(\"className\", \"selected\");\n      this.queueLoad();\n    });\n  }\n\n  render() {\n    // Remember to add:\n    // d3.select(\"#sweep\").on(\"click\", function() {\n    //   requestedSweeps += 50;\n    //   timer = d3.timer(sweep);\n    // });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form\",\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"sweep\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }\n    }, \"Run 50 iterations\"), \"Iterations: \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"iters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"num_topics_control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 7\n      }\n    }, \"Train with \", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"num-topics-input\",\n      type: \"range\",\n      name: \"topics\",\n      value: \"25\",\n      min: \"3\",\n      max: \"100\",\n      onInput: \"updateTopicCount(this)\",\n      onChange: \"onTopicsChange(this)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 48\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"num_topics_display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 200\n      }\n    }, \"25\"), \" topics\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"topics\",\n      className: \"sidebox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tabwrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: \"docs-tab\",\n      className: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 7\n      }\n    }, \"Topic Documents\"), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"corr-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 7\n      }\n    }, \"Topic Correlations\"), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"ts-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 7\n      }\n    }, \"Time Series\"), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"dl-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 7\n      }\n    }, \"Downloads\"), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"vocab-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 7\n      }\n    }, \"Vocabulary\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"docs-page\",\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: \"event.preventDefault(); queueLoad();\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    }, \"Use a different collection:\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }\n    }, \"Documents \", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"docs-file-input\",\n      type: \"file\",\n      onChange: \"onDocumentFileChange(this)\",\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }\n    }, \"Stoplist  \", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"stops-file-input\",\n      type: \"file\",\n      onChange: \"onStopwordFileChange(this)\",\n      size: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"load-inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 16\n      }\n    }, \"Upload\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }\n    }, \"Documents are sorted by their proportion of the currently selected topic, biased to prefer longer documents.\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"vocab-page\",\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }\n    }, \"Words occurring in only one topic have specificity 1.0, words evenly distributed among all topics have specificity 0.0. \", /*#__PURE__*/React.createElement(\"button\", {\n      id: \"showStops\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 151\n      }\n    }, \"Show stopwords\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"sortVocabByTopic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 7\n      }\n    }, \"Sort by topic\")), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"vocab-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 18\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 31\n      }\n    }, \"Frequency\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 49\n      }\n    }, \"Topic Specificity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 75\n      }\n    }, \"Stoplist\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ts-page\",\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }\n    }, \"Documents are grouped by their \\\"date\\\" field (the second column in the input file). These plots show the average document proportion of each topic at each date value. Date values are \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 213\n      }\n    }, \"not\"), \" parsed, but simply sorted in the order they appear in the input file.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Correlation, {\n      topicWordCounts: this.state.topicWordCounts,\n      topNWords: this.state.topNWords,\n      numTopics: this.state.numTopics,\n      zeros: this.state.zeros,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dl-page\",\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }\n    }, \"Each file is in comma-separated format.\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"doctopics-dl\",\n      href: \"javascript:;\",\n      download: \"doctopics.csv\",\n      onClick: \"saveDocTopics()\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 13\n      }\n    }, \"Document topics\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"topicwords-dl\",\n      href: \"javascript:;\",\n      download: \"topicwords.csv\",\n      onClick: \"saveTopicWords()\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 13\n      }\n    }, \"Topic words\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"keys-dl\",\n      href: \"javascript:;\",\n      download: \"keys.csv\",\n      onClick: \"saveTopicKeys()\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 13\n      }\n    }, \"Topic summaries\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"topictopic-dl\",\n      href: \"javascript:;\",\n      download: \"topictopic.csv\",\n      onClick: \"saveTopicPMI()\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 13\n      }\n    }, \"Topic-topic connections\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"graph-dl\",\n      href: \"javascript:;\",\n      download: \"gephi.csv\",\n      onClick: \"saveGraph()\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 13\n      }\n    }, \"Doc-topic graph file (for Gephi)\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      id: \"state-dl\",\n      href: \"javascript:;\",\n      download: \"state.csv\",\n      onClick: \"saveState()\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 13\n      }\n    }, \"Complete sampling state\"))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tatsukikuze12/Desktop/PastClasses/SummerResearch/jsLDAcopy/myapp/src/App.js"],"names":["React","Component","d3","Correlation","XRegExp","require","Object","keys","hasOwnProperty","prototype","hasDontEnumBug","toString","propertyIsEnumerable","dontEnums","dontEnumsLength","length","obj","TypeError","result","prop","i","call","push","QueryString","query_string","query","window","location","search","substring","vars","split","pair","arr","App","state","vocabularySize","vocabularyCounts","displayingStopwords","sortVocabByTopic","specificityScale","scaleLinear","domain","range","numTopics","stopwords","completeSweeps","requestedSweeps","selectedTopic","wordTopicCounts","topicWordCounts","tokensPerTopic","topicWeights","documents","byCountDescending","a","b","count","truncate","s","wordPattern","correlationMinTokens","correlationMinProportion","topNWords","wordCounts","n","slice","map","d","word","join","timer","documentTopicSmoothing","topicWordSmoothing","findNumTopics","setState","topics","parseInt","isNaN","alert","zeros","x","Array","queueLoad","reset","Promise","all","getStoplistUpload","getDocsUpload","then","stops","lines","ready","catch","err","select","property","text","selectAll","remove","error","console","log","forEach","w","parseLine","sortTopicWords","displayTopicWords","toggleTopicDocuments","plotMatrix","vocabTable","createTimeSVGs","timeSeries","line","docID","docDate","fields","tokens","rawTokens","toLowerCase","match","topicCounts","topic","Math","floor","random","isStopword","append","attr","sort","updateTopicCount","input","value","onTopicsChange","newNumTopics","Number","changeNumTopics","numTopics_","currentDoc","position","token","reorderDocuments","sweep","startTime","Date","now","topicNormalizers","doc","docTopicCounts","currentWordTopicCounts","sum","sample","stop","componentDidMount","on","style","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport './App.css';\nimport * as d3 from 'd3';\nimport Correlation from './corpage';\n\nvar XRegExp = require('xregexp')\n\n// Where is it used?\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\nif (!Object.keys) {\n  Object.keys = (function() {\n    'use strict';\n    var hasOwnProperty = Object.prototype.hasOwnProperty,\n        hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n        dontEnums = [\n          'toString',\n          'toLocaleString',\n          'valueOf',\n          'hasOwnProperty',\n          'isPrototypeOf',\n          'propertyIsEnumerable',\n          'constructor'\n        ],\n        dontEnumsLength = dontEnums.length;\n\n    return function(obj) {\n      if (typeof obj !== 'function' && (typeof obj !== 'object' || obj === null)) {\n        throw new TypeError('Object.keys called on non-object');\n      }\n\n      var result = [], prop, i;\n\n      for (prop in obj) {\n        if (hasOwnProperty.call(obj, prop)) {\n          result.push(prop);\n        }\n      }\n\n      if (hasDontEnumBug) {\n        for (i = 0; i < dontEnumsLength; i++) {\n          if (hasOwnProperty.call(obj, dontEnums[i])) {\n            result.push(dontEnums[i]);\n          }\n        }\n      }\n      return result;\n    };\n  }());\n}\n\n// Used for numTopics\n/** This function is copied from stack overflow: http://stackoverflow.com/users/19068/quentin */\nvar QueryString = function () {\n  // This function is anonymous, is executed immediately and\n  // the return value is assigned to QueryString!\n  var query_string = {};\n  var query = window.location.search.substring(1);\n  var vars = query.split(\"&\");\n  for (var i=0;i<vars.length;i++) {\n    var pair = vars[i].split(\"=\");\n    // If first entry with this name\n    if (typeof query_string[pair[0]] === \"undefined\") {\n      query_string[pair[0]] = pair[1];\n    // If second entry with this name\n    } else if (typeof query_string[pair[0]] === \"string\") {\n      var arr = [ query_string[pair[0]], pair[1] ];\n      query_string[pair[0]] = arr;\n    // If third or later entry with this name\n    } else {\n      query_string[pair[0]].push(pair[1]);\n    }\n  }\n    return query_string;\n} ();\n\nclass App extends Component {\n  state = {\n    // Vocabulary statistics\n\n    // Needed by reset & parseline\n    vocabularySize: 0,\n\n    // needed by reset & parseline, changeNumTopics\n    vocabularyCounts: {},\n\n    //needed by reset\n    displayingStopwords: false,\n    sortVocabByTopic: false,\n    specificityScale: d3.scaleLinear().domain([0,1]).range([\"#ffffff\", \"#99d8c9\"]),\n\n    // Topic model parameters\n\n    // needed by reset & sortTopicWords, changeNumTopics\n    numTopics: 0, // run findNumTopics upon mount\n\n    // required by reset & ready & parseline\n    stopwords: {},\n\n    // required by reset, changeNumTopics\n    completeSweeps: 0,\n    requestedSweeps: 0,\n\n    // in reset, changeNumTopics\n    selectedTopic: -1,\n\n    // Needed by reset & parseline & sortTopicWords, changeNumTopics\n    wordTopicCounts: {},\n\n    // Needed by reset & sortTopicWords, changeNumTopics\n    topicWordCounts: [],\n\n    // Needed by reset & parseline, changeNumTopics\n    tokensPerTopic: [], // set to zeros(numTopics)\n\n    // in reset, changeNumTopics\n    topicWeights: [], // set to zeros(numTopics)\n\n    // used by reset & parseline, changeNumTopics\n    documents: [],\n\n    // used by sortTopicWords\n    byCountDescending: function (a,b) { return b.count - a.count; },\n\n    // used by parseLine\n    truncate: function(s) { return s.length > 300 ? s.substring(0, 299) + \"...\" : s; },\n    wordPattern: XRegExp(\"\\\\p{L}[\\\\p{L}\\\\p{P}]*\\\\p{L}\", \"g\"),\n\n    // Constants for calculating topic correlation. A doc with 5% or more tokens in a topic is \"about\" that topic.\n    correlationMinTokens: 2, // used by getTopicCorrelations\n    correlationMinProportion: 0.05, // used by getTopicCorrelations  \n\n    topNWords: function(wordCounts, n) { return wordCounts.slice(0,n).map( function(d) { return d.word; }).join(\" \"); }, // Used in timeSeries\n\n    timer: 0, // used in sweep\n    documentTopicSmoothing: 0.1, // (used by sweep)\n    topicWordSmoothing: 0.01, // (used by sweep)\n\n  };\n\n  findNumTopics() {\n    this.setState({numTopics: QueryString.topics ? parseInt(QueryString.topics) : 25});\n    if (isNaN(this.state.numTopics)) {\n    alert(\"The requested number of topics [\" + QueryString.topics + \"] couldn't be interpreted as a number\");\n    this.setState({numTopics:25});\n    }\n  }\n\n  zeros(n) {\n    var x = new Array(n);\n    for (var i = 0; i < n; i++) { x[i] = 0.0; }\n    return x;\n  }\n\n  queueLoad() { \n    this.reset();\n    Promise.all([\n      this.getStoplistUpload(),\n      this.getDocsUpload()\n      ]).then(function([stops, lines]) {this.ready(null, stops, lines)})\n        .catch(function(err) {this.ready(err, null, null)})\n  }\n\n  reset() {\n    this.vocabularySize = 0;\n    this.vocabularyCounts = {};\n    this.displayingStopwords = false;\n    this.sortVocabByTopic = false;\n    this.specificityScale = d3.scaleLinear().domain([0,1]).range([\"#ffffff\", \"#99d8c9\"]);\n    \n    d3.select(\"#num-topics-input\").property(\"value\", this.numTopics);\n  \n    this.stopwords = {};\n  \n    this.completeSweeps = 0;\n    this.requestedSweeps = 0;\n    d3.select(\"#iters\").text(this.completeSweeps);\n  \n    this.selectedTopic = -1;\n  \n    this.wordTopicCounts = {};\n    this.topicWordCounts = [];\n    this.tokensPerTopic = this.zeros(this.numTopics);\n    this.topicWeights = this.zeros(this.numTopics);\n    \n    this.documents = [];\n    d3.selectAll(\"div.document\").remove();\n  }\n  \n  ready(error, stops, lines) {\n    if (error) { alert(\"File upload failed. Please try again.\"); throw error;}\n    else {\n      // Create the stoplist\n      console.log(stops);\n      stops.split(/\\s+/).forEach(function (w) { console.log(w); this.stopwords[w] = 1; });\n  \n      // Load documents and populate the vocabulary\n      lines.split(\"\\n\").forEach(this.parseLine);\n  \n      this.sortTopicWords();\n      displayTopicWords();\n      toggleTopicDocuments(0);\n      //plotGraph();\n      \n      plotMatrix();\n      vocabTable();\n      createTimeSVGs();\n      timeSeries();\n    }\n  }\n  \n  parseLine ( line ) {\n    if (line == \"\") { return; }\n    var docID = this.documents.length;\n    var docDate = \"\";\n    var fields = line.split(\"\\t\");\n    var text = fields[0];  // Assume there's just one field, the text\n    if (fields.length == 3) {  // If it's in [ID]\\t[TAG]\\t[TEXT] format...\n      docID = fields[0];\n      docDate = fields[1]; // do not interpret date as anything but a string\n      text = fields[2];\n    }\n  \n    var tokens = [];\n    var rawTokens = text.toLowerCase().match(this.wordPattern);\n    if (rawTokens == null) { return; }\n    var topicCounts = this.zeros(this.numTopics);\n  \n    rawTokens.forEach(function (word) {\n      if (word !== \"\") {\n        var topic = Math.floor(Math.random() * this.numTopics);\n  \n        if (word.length <= 2) { this.stopwords[word] = 1; }\n  \n        var isStopword = this.stopwords[word];\n        if (isStopword) {\n          // Record counts for stopwords, but nothing else\n          if (! this.vocabularyCounts[word]) {\n            this.vocabularyCounts[word] = 1;\n          }\n          else {\n            this.vocabularyCounts[word] += 1;\n          }\n        }\n        else {\n          this.tokensPerTopic[topic]++;\n          if (! this.wordTopicCounts[word]) {\n            this.wordTopicCounts[word] = {};\n            this.vocabularySize++;\n            this.vocabularyCounts[word] = 0;\n          }\n          if (! this.wordTopicCounts[word][topic]) {\n            this.wordTopicCounts[word][topic] = 0;\n          }\n          this.wordTopicCounts[word][topic] += 1;\n          this.vocabularyCounts[word] += 1;\n          this.topicCounts[topic] += 1;\n        }\n        tokens.push({\"word\":word, \"topic\":topic, \"isStopword\":isStopword });\n      }\n    });\n    \n    this.documents.push({ \"originalOrder\" : this.documents.length, \"id\" : docID, \"date\" : docDate, \"originalText\" : text, \"tokens\" : tokens, \"topicCounts\" : topicCounts});\n    // Need to move this selection and adding to #docs-page into a different component\n    d3.select(\"div#docs-page\").append(\"div\")\n       .attr(\"class\", \"document\")\n       .text(\"[\" + docID + \"] \" + this.truncate(text));\n  }\n\n  // used by addStop, removeStop in vocab, saveTopicKeys in downloads, sweep in sweep\n  sortTopicWords() {\n    this.topicWordCounts = [];\n    for (var topic = 0; topic < this.numTopics; topic++) {\n      this.topicWordCounts[topic] = [];\n    }\n  \n    for (var word in this.wordTopicCounts) {\n      for (var topic in this.wordTopicCounts[word]) {\n        this.topicWordCounts[topic].push({\"word\":word, \"count\":this.wordTopicCounts[word][topic]});\n      }\n    }\n  \n    for (var topic = 0; topic < this.numTopics; topic++) {\n      this.topicWordCounts[topic].sort(this.byCountDescending);\n    }\n  }\n\n  // This function is the callback for \"input\", it changes as we move the slider\n  //  without releasing it.\n  updateTopicCount(input) {\n    d3.select(\"#num_topics_display\").text(input.value);\n  }\n\n  // This function is the callback for \"change\", it only fires when we release the\n  //  slider to select a new value.\n  onTopicsChange(input) {\n    console.log(\"Changing # of topics: \" + input.value);\n    \n    var newNumTopics = Number(input.value);\n    if (! isNaN(newNumTopics) && newNumTopics > 0 && newNumTopics !== this.numTopics) {\n      this.changeNumTopics(Number(input.value));\n    }\n  }\n\n  changeNumTopics(numTopics_) {\n    this.numTopics = numTopics_;\n    this.selectedTopic = -1;\n    \n    this.completeSweeps = 0;\n    this.requestedSweeps = 0;\n    d3.select(\"#iters\").text(this.completeSweeps);\n    \n    this.wordTopicCounts = {};\n    Object.keys(this.vocabularyCounts).forEach(function (word) { this.wordTopicCounts[word] = {} });\n    \n    this.topicWordCounts = [];\n    this.tokensPerTopic = this.zeros(this.numTopics);\n    this.topicWeights = this.zeros(this.numTopics);\n    \n    this.documents.forEach( function( currentDoc, i ) {\n      currentDoc.topicCounts = this.zeros(this.numTopics);\n      for (var position = 0; position < currentDoc.tokens.length; position++) {\n        var token = currentDoc.tokens[position];\n        token.topic = Math.floor(Math.random() * this.numTopics);\n        \n        if (! token.isStopword) {\n          this.tokensPerTopic[token.topic]++;\n          if (! this.wordTopicCounts[token.word][token.topic]) {\n            this.wordTopicCounts[token.word][token.topic] = 1;\n          }\n          else {\n            this.wordTopicCounts[token.word][token.topic] += 1;\n          }\n          currentDoc.topicCounts[token.topic] += 1;\n        }\n      }\n    });\n\n    this.sortTopicWords();\n    displayTopicWords();\n    reorderDocuments();\n    vocabTable();\n    \n    // Restart the visualizations\n    createTimeSVGs();\n    timeSeries();\n    plotMatrix({  numTopics: this.numTopics,\n                  documents: this.documents,\n                  correlationMinTokens: this.correlationMinTokens,\n                  correlationMinProportion: this.correlationMinProportion,\n                  topicWordCounts: this.topicWordCounts,\n                  topNWords: this.topNWords,\n                  zeros: this.zeros});\n  }\n\n\n  sweep() {\n    var startTime = Date.now();\n\n    var topicNormalizers = zeros(this.numTopics);\n    for (var topic = 0; topic < this.numTopics; topic++) {\n      topicNormalizers[topic] = 1.0 / (this.vocabularySize * this.topicWordSmoothing + this.tokensPerTopic[topic]);\n    }\n\n    for (var doc = 0; doc < documents.length; doc++) {\n      var currentDoc = documents[doc];\n      var docTopicCounts = currentDoc.topicCounts;\n\n      for (var position = 0; position < currentDoc.tokens.length; position++) {\n        var token = currentDoc.tokens[position];\n        if (token.isStopword) { continue; }\n\n        tokensPerTopic[ token.topic ]--;\n        var currentWordTopicCounts = wordTopicCounts[ token.word ];\n        currentWordTopicCounts[ token.topic ]--;\n        if (currentWordTopicCounts[ token.topic ] == 0) {\n          //delete(currentWordTopicCounts[ token.topic ]);\n        }\n        docTopicCounts[ token.topic ]--;\n        topicNormalizers[ token.topic ] = 1.0 / (vocabularySize * topicWordSmoothing + tokensPerTopic[ token.topic ]);\n\n        var sum = 0.0;\n        for (var topic = 0; topic < numTopics; topic++) {\n          if (currentWordTopicCounts[ topic ]) {\n            topicWeights[topic] =\n              (documentTopicSmoothing + docTopicCounts[topic]) *\n              (topicWordSmoothing + currentWordTopicCounts[ topic ]) *\n            topicNormalizers[topic];\n          }\n          else {\n            topicWeights[topic] =\n              (documentTopicSmoothing + docTopicCounts[topic]) *\n            topicWordSmoothing *\n            topicNormalizers[topic];\n          }\n          sum += topicWeights[topic];\n        }\n\n        // Sample from an unnormalized discrete distribution\n        var sample = sum * Math.random();\n          var i = 0;\n          sample -= topicWeights[i];\n          while (sample > 0.0) {\n            i++;\n            sample -= topicWeights[i];\n        }\n        token.topic = i;\n\n        tokensPerTopic[ token.topic ]++;\n        if (! currentWordTopicCounts[ token.topic ]) {\n          currentWordTopicCounts[ token.topic ] = 1;\n        }\n        else {\n          currentWordTopicCounts[ token.topic ] += 1;\n        }\n        docTopicCounts[ token.topic ]++;\n\n        topicNormalizers[ token.topic ] = 1.0 / (vocabularySize * topicWordSmoothing + tokensPerTopic[ token.topic ]);\n      }\n    }\n\n    //console.log(\"sweep in \" + (Date.now() - startTime) + \" ms\");\n    completeSweeps += 1;\n    d3.select(\"#iters\").text(completeSweeps);\n    if (completeSweeps >= requestedSweeps) {\n      reorderDocuments();\n      sortTopicWords();\n      displayTopicWords();\n      plotMatrix();\n      vocabTable();\n      timeSeries();\n      timer.stop();\n    }\n  }\n\n  componentDidMount() {\n    this.findNumTopics();\n    // Set upon initialisation, changed to new numTopics in reset\n    d3.select(\"#num-topics-input\").attr(\"value\", this.state.numTopics);\n    \n    this.setState({tokensPerTopic: this.zeros(this.state.numTopics)});\n    this.setState({topicWeights: this.zeros(this.state.numTopics)});\n    \n    // used by parseLine\n    d3.select(\"#docs-tab\").on(\"click\", function() {\n      d3.selectAll(\".page\").style(\"display\", \"none\");\n      d3.selectAll(\"ul li\").attr(\"className\", \"\");\n      d3.select(\"#docs-page\").style(\"display\", \"block\");\n      d3.select(\"#docs-tab\").attr(\"className\", \"selected\");\n\n    this.queueLoad();\n    });\n  }\n  \n  render() {\n    // Remember to add:\n    // d3.select(\"#sweep\").on(\"click\", function() {\n    //   requestedSweeps += 50;\n    //   timer = d3.timer(sweep);\n    // });\n    return (\n      <div id=\"app\">\n      <div id=\"tooltip\"></div>\n\n      <div id=\"main\">\n      <div id=\"form\" className=\"top\">\n        <button id=\"sweep\">Run 50 iterations</button>\n        Iterations: <span id=\"iters\">0</span>\n\n      <span id=\"num_topics_control\">Train with <input id=\"num-topics-input\" type=\"range\" name=\"topics\" value=\"25\" min=\"3\" max=\"100\" onInput=\"updateTopicCount(this)\" onChange=\"onTopicsChange(this)\"/> <span id=\"num_topics_display\">25</span> topics</span>\n      </div>\n\n      <div className=\"sidebar\">\n\n      <div id=\"topics\" className=\"sidebox\">\n      </div>\n\n      </div>\n\n      <div id=\"tabwrapper\">\n      <div className=\"tabs\">\n      <ul>\n      <li id=\"docs-tab\" className=\"selected\">Topic Documents</li>\n      <li id=\"corr-tab\">Topic Correlations</li>\n      <li id=\"ts-tab\">Time Series</li>\n\n      <li id=\"dl-tab\">Downloads</li>\n      <li id=\"vocab-tab\">Vocabulary</li>\n      </ul>\n      </div>\n      <div id=\"pages\">\n\n      <div id=\"docs-page\" className=\"page\">\n        <div className=\"upload\">\n        <form onSubmit=\"event.preventDefault(); queueLoad();\">\n          <div>Use a different collection:</div>\n          <div>Documents <input id=\"docs-file-input\" type=\"file\" onChange=\"onDocumentFileChange(this)\" size=\"10\"/></div>\n          <div>Stoplist  <input id=\"stops-file-input\" type=\"file\" onChange=\"onStopwordFileChange(this)\" size=\"10\"/></div>\n          <div><button id=\"load-inputs\">Upload</button></div>\n        </form>\n        </div>\n        <div className=\"help\">Documents are sorted by their proportion of the currently selected topic, biased to prefer longer documents.</div>\n        \n      </div>\n\n      <div id=\"vocab-page\" className=\"page\">\n        <div className=\"help\">Words occurring in only one topic have specificity 1.0, words evenly distributed among all topics have specificity 0.0. <button id=\"showStops\">Show stopwords</button>\n      <button id=\"sortVocabByTopic\">Sort by topic</button>\n        </div>\n      <table id=\"vocab-table\">\n      <thead><tr><th>Word</th><th>Frequency</th><th>Topic Specificity</th><th>Stoplist</th></tr></thead>\n      <tbody></tbody>\n      </table>\n      </div>\n\n      <div id=\"ts-page\" className=\"page\">\n        <div className=\"help\">Documents are grouped by their \"date\" field (the second column in the input file). These plots show the average document proportion of each topic at each date value. Date values are <i>not</i> parsed, but simply sorted in the order they appear in the input file.</div>\n        <div className=\"help\"></div>\n      </div>\n\n      <Correlation topicWordCounts ={this.state.topicWordCounts} topNWords={this.state.topNWords} numTopics={this.state.numTopics} zeros={this.state.zeros} \n        />\n\n      <div id=\"dl-page\" className=\"page\">\n        <div className=\"help\">Each file is in comma-separated format.</div>\n        <ul>\n        <li><a id=\"doctopics-dl\" href=\"javascript:;\" download=\"doctopics.csv\" onClick=\"saveDocTopics()\">Document topics</a></li>\n        <li><a id=\"topicwords-dl\" href=\"javascript:;\" download=\"topicwords.csv\" onClick=\"saveTopicWords()\">Topic words</a></li>\n        <li><a id=\"keys-dl\" href=\"javascript:;\" download=\"keys.csv\" onClick=\"saveTopicKeys()\">Topic summaries</a></li>\n        <li><a id=\"topictopic-dl\" href=\"javascript:;\" download=\"topictopic.csv\" onClick=\"saveTopicPMI()\">Topic-topic connections</a></li>\n        <li><a id=\"graph-dl\" href=\"javascript:;\" download=\"gephi.csv\" onClick=\"saveGraph()\">Doc-topic graph file (for Gephi)</a></li>\n        <li><a id=\"state-dl\" href=\"javascript:;\" download=\"state.csv\" onClick=\"saveState()\">Complete sampling state</a></li>\n        </ul>\n      </div>\n\n      </div>\n      </div>\n      </div>\n      </div>\n    );\n  };\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}